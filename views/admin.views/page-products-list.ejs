<%- include('./layouts/head.ejs', { pageTitle: 'Product List' }) %>


    <body>
        <div class="screen-overlay"></div>

        <%- include ('./partials/admin.aside.ejs') %>


            <main class="main-wrap">


                <%- include ('./partials/admin.home.header.ejs') %>

                    <section class="content-main">
                        <div class="content-header">
                            <div>
                                <h2 class="content-title card-title">Products List</h2>

                            </div>
                            <div>
                                <!--  -->
                                <a href="/category/view" class="btn btn-primary btn-sm rounded">Explore category</a>
                                <a href="/product/add" class="btn btn-primary btn-sm rounded">New Product</a>
                            </div>
                        </div>
                        <div class="card mb-4">
                            <header class="card-header">
                                <div class="row align-items-center">

                                    <div class="col-search" style="width: 300px;">
                                        <form class="searchform">
                                            <div class="input-group">
                                                <input list="search_terms" type="text" class="form-control"
                                                    id="searchValue" placeholder="Enter product name"
                                                    oninput="searchProduct()">
                                                <button class="btn btn-light bg" type="button">
                                                    <i class="material-icons md-search"></i></button>
                                            </div>

                                        </form>
                                    </div>

                                    <div class="col-md-3 col-12 me-auto mb-md-0 mb-3">
                                        <select id="categoryValue" class="form-select" onchange="filterProductData()">

                                            <option selected>All category</option>

                                            <%if(categories.length> 0) {%>
                                                <%categories.forEach((category)=> { %>
                                                    <option>
                                                        <%=category.name %>
                                                    </option>
                                                    <% }) %>

                                                        <% } %>


                                        </select>
                                    </div>
                                    <div class="col-md-3 col-12 me-auto mb-md-0 mb-3">
                                        <select id="stockFilter" class="form-select" onchange="filterProductData()">
                                            <option selected>Sort by</option>
                                            <option>Stock--Low to High</option>
                                            <option>Stock--High to Low</option>

                                        </select>
                                    </div>

                                    <div class="col-md-2 col-6">
                                        <select id="productStatus" class="form-select" onchange="filterProductData()">
                                            <option selected>Show all</option>
                                            <option>Active</option>
                                            <option>Blocked</option>
                                        </select>
                                    </div>
                                </div>
                            </header> <!-- card-header end// -->

                            <div class="card-body">

                                <% if (typeof(errorMessage) !=="undefined" ) { %>
                                    <script>
                                        document.addEventListener('DOMContentLoaded', function () {
                                            Swal.fire({
                                                icon: 'error',
                                                title: 'Error!',
                                                text: '<%= errorMessage %>',
                                                showConfirmButton: true,
                                                confirmButtonText: 'OK',
                                                customClass: {
                                                    confirmButton: 'btn btn-danger', // Add custom class for styling
                                                },
                                            });
                                        });
                                    </script>
                                    <% } %>

                                        <% if (typeof(successMessage) !=="undefined" ) { %>
                                            <script>
                                                document.addEventListener('DOMContentLoaded', function () {
                                                    Swal.fire({
                                                        icon: 'success',
                                                        title: 'Success!',
                                                        text: '<%= successMessage %>',
                                                        showConfirmButton: true,
                                                        confirmButtonText: 'OK',
                                                        customClass: {
                                                            confirmButton: 'btn btn-success', // Add custom class for styling
                                                        },
                                                    });
                                                });
                                            </script>
                                            <% } %>



                                                <div class="row align-items-center mb-10 ">



                                                    <div class="col-lg-2 col-sm-2 col-4 col-price ml-130">
                                                        <span>
                                                            Name

                                                        </span>
                                                    </div>
                                                    <div class="col-lg-2 col-sm-2 col-4 col-price ml-100">
                                                        <span>
                                                            Category name
                                                        </span>
                                                    </div>
                                                    <div class="col-lg-2 col-sm-3 col-3 col-date ml-7">
                                                        <span>
                                                            Stock
                                                        </span>
                                                    </div>

                                                    <div class="col-lg-2 col-sm-3 col-3 col-date ml-10">
                                                        <span>
                                                            Status
                                                        </span>
                                                    </div>


                                                </div>

                                                <article class="itemlist" id="productsList">

                                                    <!-- This is the where products will be listed-->


                                                </article> <!-- itemlist  .// -->

                            </div> <!-- card-body end// -->
                        </div> <!-- card end// -->
                        <div class="pagination-area mt-30 mb-50">
                            <nav aria-label="Page navigation example">
                                <ul id="paginationList" class="pagination justify-content-start">

                                </ul>
                            </nav>
                        </div>
                    </section> <!-- content-main end// -->

                    <!--Footer-->
                    <%- include ('./partials/admin.footer.ejs') %>


            </main>

            <script>
                document.addEventListener("DOMContentLoaded", async () => {
                    await filterProductData()
                })
            </script>

            <script>

                // When user search for products, for getting all products,
                // removing the other filters

                async function searchProduct() {

                    // Setting category value as all category
                    const categoryValueSelect = document.getElementById('categoryValue');
                    const categoryValueOptions = categoryValueSelect.options;
                    for (let i = 0; i < categoryValueOptions.length; i++) {
                        if (categoryValueOptions[i].text === 'All category') {
                            categoryValueOptions[i].selected = true;
                            break;
                        }
                    }

                    // Setting stockfilter value as not sorted
                    const stockFilterSelect = document.getElementById("stockFilter")
                    const stockFilterSelectOptions = stockFilterSelect.options;
                    for (let i = 0; i < stockFilterSelectOptions.length; i++) {
                        if (stockFilterSelectOptions[i].text === 'Sort by') {
                            stockFilterSelectOptions[i].selected = true;
                            break;
                        }
                    }

                    // Setting product status value as show all
                    const productStatusOptions = document.getElementById("productStatus")
                    const productStatusOptionsOptions = productStatusOptions.options;
                    for (let i = 0; i < productStatusOptionsOptions.length; i++) {
                        if (productStatusOptionsOptions[i].text === 'Show all') {
                            productStatusOptionsOptions[i].selected = true;
                            break;
                        }
                    }





                    await filterProductData()
                }




                // For filtering products based on search, category, stock, status
                async function filterProductData(page) {

                    let params = new URLSearchParams()

                    params.append("page", page)

                    const searchValue = document.getElementById("searchValue").value
                    params.append("search", searchValue)

                    const categoryValue = document.getElementById("categoryValue").value
                    params.append("category", categoryValue)

                    const stockFilterValue = document.getElementById("stockFilter").value
                    params.append("stockFilter", stockFilterValue)

                    const productStatusValue = document.getElementById("productStatus").value
                    params.append("status", productStatusValue)

                    const response = await fetch("/product/view-admin/apply-filter?" + params)
                    const data = await response.json()

                    // Assuming data is the response from your fetch call

                    const productListElement = document.getElementById('productsList');

                    // Clear existing content in productListElement
                    productListElement.innerHTML = '';

                    if (typeof data !== 'undefined' && Array.isArray(data.products)) {
                        data.products.forEach(product => {
                            const productRow = document.createElement('div');
                            productRow.className = 'row align-items-center';

                            // Create and append the columns for each product property
                            productRow.innerHTML = `
            <div class="col col-check flex-grow-0">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox">
                </div>
            </div>
            <div class="col-lg-4 col-sm-4 col-8 flex-grow-1 col-name">
                <a class="itemside" href="#">
                    <div class="left">
                        <img src="${product.images[0].url}" class="img-sm img-thumbnail" alt="Item">
                    </div>
                    <div class="info">
                        <h6 class="mb-0">${product.name}</h6>
                    </div>
                </a>
            </div>
            <div class="col-lg-2 col-sm-2 col-4 col-price">
                <span>${product.category[0].name}</span>
            </div>
            <div class="col-lg-2 col-sm-3 col-3 col-date">
                <span>${product.stock}</span>
            </div>
            <div class="col-lg-1 col-sm-2 col-4 col-status">
                <span class="badge rounded-pill ${product.isBlocked ? 'alert-danger' : 'alert-success'}">
                    ${product.isBlocked ? 'Blocked' : 'Active'}
                </span>
            </div>
            <div class="col-lg-2 col-sm-2 col-4 col-action text-end">
                <a href="/product/update/${product._id}" class="btn btn-sm font-sm rounded btn-brand">
                    <i class="material-icons md-edit"></i> Edit
                </a>
                <!-- Add your delete button or any other actions here -->
            </div>`;

                            // Append the productRow to the productListElement
                            productListElement.appendChild(productRow);
                        });
                    }

                    // Making the pagination dynamic
                    const paginationList = document.getElementById('paginationList');
                    paginationList.innerHTML = '';

                    if (typeof data !== 'undefined' && data.totalPages) {
                        // Iterate over the total number of pages and create pagination items
                        for (let i = 0; i < data.totalPages; i++) {
                            const liElement = document.createElement('li');
                            liElement.id = `page0${i + 1}`;
                            liElement.className = 'page-item';
                            const aElement = document.createElement('a');
                            aElement.className = 'page-link';
                            aElement.onclick = function () {
                                filterProductData(i + 1);
                            };
                            aElement.textContent = `0${i + 1}`;
                            liElement.appendChild(aElement);
                            paginationList.appendChild(liElement);
                        }
                    }
                    if (typeof data !== 'undefined' && data.totalPages) {

                        const pageli = document.getElementById("page0" + data.page)
                        pageli.classList.add("active")
                    }


                }

            </script>

            <script src="/admin.assets/js/vendors/jquery-3.6.0.min.js"></script>
            <script src="/admin.assets/js/vendors/bootstrap.bundle.min.js"></script>
            <script src="/admin.assets/js/vendors/select2.min.js"></script>
            <script src="/admin.assets/js/vendors/perfect-scrollbar.js"></script>
            <script src="/admin.assets/js/vendors/jquery.fullscreen.min.js"></script>
            <!-- Main Script -->
            <script src="/admin.assets/js/main.js" type="text/javascript"></script>

            <!--sweet alert-->
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.all.min.js"></script>

    </body>

    </html>